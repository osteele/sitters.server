#!/usr/bin/env coffee

argv = require('optimist').argv
requestType = argv._[0]

Firebase = require('firebase')
rootFB = new Firebase('https://sevensitters.firebaseIO.com/')
requestFB = rootFB.child('request')

DemoAccountKey = 'facebook/511404287'

Object.defineProperty Object.prototype, 'tap',
  value: (fn) ->
    fn.call this
    return this
  enumerable: false

RequestTypes =
  'add-sitter': ->
    sitterId = argv['sitter-id'] ? 2
    {delay: 0, sitterId}
  'register-user': ->
    {displayName: 'Mom', email: 'mom@host.com'}
  'reserve-sitter': ->
    sitterId = argv['sitter-id'] ? 2
    startTime = new Date().tap -> @.setHours 18
    endTime = new Date().tap -> @.setHours 22
    [startTime, endTime].forEach (date) ->
      date.setMinutes 0
      date.setSeconds 0
      date.setMilliseconds 0
    {delay: 0, sitterId, startTime: startTime.toISOString(), endTime: endTime.toISOString()}
  'set-sitter-count': ->
    count = argv.count ? 2
    {count}

if requestType of RequestTypes
  parameters = RequestTypes[requestType]()
  for key, value of parameters
    optionName = key.replace(/[A-Z]/g, (c) -> '-' + c.toLowerCase()) # camelCase -> train-case
    optionValue = argv[optionName]
    if optionValue?
      optionValue = Number(optionValue) if value instanceof Number
      parameters[key] = optionValue
  request = {
    requestType: requestType.replace(/-(.)/g, (__, c) -> c.toUpperCase()) # train-case -> camelCase
    accountKey: DemoAccountKey
    parameters: parameters
  }
  if false
    console.log request
    process.exit()
  requestFB.push request, -> process.exit()
else
  for name of RequestTypes
    console.log '  ' + name
  process.exit()
