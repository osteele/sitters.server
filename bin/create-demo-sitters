#!/usr/bin/env coffee

_ = require 'underscore'
Q = require 'q'
Q.longStackSupport = true
_(global).extend require('../app/lib/models')

SitterProfileData = require '../data/sitters.json'

updateSittersP = Q.all SitterProfileData.map (sitterData) ->
  userProfileId = sitterData.id

  profileData = _.extend {}, sitterData
  delete profileData.id

  userAttributes =
    displayName  : profileData.name
    email        : "sitter-#{userProfileId}@sevensitters.com"
    is_simulated : true
    phone        : "415 555-000#{userProfileId}"
    role         : 'sitter'

  console.info 'Updating', userProfileId, profileData.name
  UserProfile.findOrCreate(id:userProfileId).then (userProfile) ->
    userProfile.getUser().then (user) ->
      Q.when(user or User.create(userAttributes)).then (user) ->
        accountAttributes =
          user_id          : user.id
          provider_name    : 'facebook'
          provider_user_id : String(172347878787877 + userProfileId)

        Q.all [
          user.updateAttributes userAttributes
          user.setUserProfile userProfile
          userProfile.updateAttributes data:profileData
          # ensure each simulated user has an account, so that the simulator
          # can receive message for that user
          user.getAccounts().then (accounts) ->
            Account.create(accountAttributes) unless accounts.length
        ]

updateSittersP
  .catch((error) -> console.error error)
  .done ->
    process.exit()
