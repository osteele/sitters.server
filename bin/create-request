#!/usr/bin/env coffee

_ = require 'underscore'
argv = require('optimist').argv
path = require 'path'
util = require 'util'
Q = require 'Q'
_(global).extend require('../lib/utils')
_.str = require('underscore.string')
_.mixin(_.str.exports())
require('dotenv').load()

{requestsFB} = require '../lib/firebase'

requestTypeName = argv._[0] # in train-case

TestAccountKey = 'facebook/511404287'

RequestTypeGenerators =
  addSitter: -> {delay: 0, sitterId: 2}

  registerDeviceToken: ->
    {token: '0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef'}

  registerPaymentToken: ->
    card = {number: '4242424242424242', exp_month: 12, exp_year: 2015, cvc: '123'}
    return card if this.mode == 'help'
    stripe = require('stripe')(process.env.STRIPE_SECRET_KEY)
    stripe.tokens.create(card:card).then (token) ->
      Q {token:token.id}

  registerUser: -> {displayName: 'Mom', email: 'mom@host.com'}

  reserveSitter: ->
    startTime = new Date().tap -> @.setHours 18
    endTime = new Date().tap -> @.setHours 22
    [startTime, endTime].forEach (date) ->
      date.setMinutes 0
      date.setSeconds 0
      date.setMilliseconds 0
    {delay: 0, sitterId: 2, startTime: startTime.toISOString(), endTime: endTime.toISOString()}

  setSitterCount: -> {count: 2}

mergeCommandLineParameters = (parameters) ->
  for key, value of parameters
    optionName = _(key).underscored()
    optionValue = argv[optionName]
    if optionValue?
      optionValue = Number(optionValue) if value instanceof Number
      parameters[key] = optionValue
  return parameters

requestType = requestTypeName && _(requestTypeName).camelize()
if requestType of RequestTypeGenerators
  parameters = RequestTypeGenerators[requestType].call(mode:'run')
  accountKey = TestAccountKey
  if false
    console.info request
    process.exit()
  Q.resolve(parameters).then (parameters) ->
    parameters = mergeCommandLineParameters(parameters)
    request = {requestType, accountKey, parameters}
    requestsFB.push request, -> process.exit()
else
  programName =  './' + path.relative(process.cwd(), argv.$0.replace(/^coffee\s+/, ''))
  console.info "Usage: #{programName} COMMAND [OPTIONS]"
  console.info "Commands:"
  for key, optionsFn of RequestTypeGenerators
    options = optionsFn.call(mode:'help')
    console.info ' ', _(key).dasherize(), ("--#{_(option).dasherize()}=#{util.inspect(v)}" for option, v of options).join(' ')
  process.exit()
